#!/bin/sh
#
# load sensor for particular file systems and floating licenses
#
# NB:
#    1) add the new complexes (via qconf -mc) for the following:
#       * complex configurations managed in the shell script
#           eg, 'perl -x qloadsensor'
#       * complex consumables managed global
#           eg, 'qlicserver -c'
#    2) initialize the global complex consumables to be managed
#           eg, 'qlicserver -C'
#
# $Id: qloadsensor,v 1.13 2007/12/14 11:39:19 cfdadmin Exp $
# copyright (c) 2003-07 <Mark.Olesen@emconTechnologies.com>
#
# Licensed and distributed under the Creative Commons
# Attribution-NonCommercial-ShareAlike 2.5 License.
# http://creativecommons.org/licenses/by-nc-sa/2.5
# -----------------------------------------------------------------------------

#
# impose default GridEngine environment + ascertain the binary architecture
#
# you likely don't need to adjust these values, since the loadsensor is called
# from sge_execd, which in turn is started from /etc/init.d/n1ge and
# these variables should be correctly exported there
#
: ${SGE_ROOT:=/opt/n1ge6}
: ${SGE_CELL:=default}
: ${SGE_ARCH:=`$SGE_ROOT/util/arch`}

export SGE_ROOT SGE_CELL SGE_ARCH

# -----------------------------------------------------------------------------
# this script should run as the 'admin_user' registered in 'bootstrap'
#
if [ "$UID" -eq 0 ]
then
   admin_user=$(sed -ne 's/^admin_user *//p' $SGE_ROOT/$SGE_CELL/common/bootstrap)
   : ${admin_user:=root}
   if [ $admin_user != root -a $(echo $admin_user | tr "A-Z" "a-z") != none ]
   then
      exec $SGE_ROOT/utilbin/$SGE_ARCH/adminrun $admin_user $0
   fi
fi

# <settings>
# ========================================================================
# now that we are the admin_user, we can source our standard settings
#   - customize *all* settings there (eg, license server settings)
#
#   - ENSURE THAT '$SGE_site' IS DEFINED !!!
for i in $SGE_ROOT/$SGE_CELL/site/environ; do [ -f $i ] && . $i; done
#
# ========================================================================
# </settings>

###############################################################################
###############################################################################
# CUSTOMIZE THESE SETTINGS - iff. required

qlicserver="$SGE_site/qlicserver dir=$SGE_site output=qlicserver.cache qhost=qhost.cache qstat=qstat.cache"

# END OF CUSTOMIZE SETTINGS
###############################################################################
###############################################################################

#
# set some constants
#
HOST=$($SGE_utilbin/gethostname -aname)
UQHOST=$(echo $HOST | cut -f1 -d.)
SGE_qmaster=unknown; export SGE_qmaster

#
# the real (not compiled in) architecture
#
os_arch=`$SGE_ROOT/util/arch`

# -----------------------------------------------------------------------------
# act_qmaster
#
# extract the unqualified host name from the "act_qmaster" file
# return this value or 'unknown' on failure
#
act_qmaster()
{
   tmp=$(cat $SGE_common/act_qmaster 2>/dev/null)
   echo ${tmp:-unknown}
}

# -----------------------------------------------------------------------------
# df_info
#
# echo the $1_{total,used,free} space on filesystem $2
#
# gridengine uses the suffixes
#   'k' => blocksize 1000
#   'K' => blocksize 1024
#
# return 0 if 'df' fails
df_info()
{
   # 1:tag 2:mount 3:filesys 4:total 5:Used 6:Avail 7:Used% 8:Mount
   [ -d "$2" ]    && set -- $1 $2 $( df -k $2 2>/dev/null | tail -1 )

   #!# we could add the following check:
   #!# [ "$2" != "$8" ] && set -- $1 $2;	# mount point mismatch?

   [ "$#" -ge 6 ] || set -- $1 $2 filesystem 0 0 0

   echo "$UQHOST:$1_total:$4K"
   echo "$UQHOST:$1_used:$5K"
   echo "$UQHOST:$1_free:$6K"
}

# invariant values
if [ -e "/proc/cpuinfo" ]
then
   mips=$(awk '{if (/mips/) printf "%.0f\n", $NF}' /proc/cpuinfo | tail -1)
else
   mips=0
fi

unset os_name
# extract VERSION = 10.2 => suse10.2
if [ -e "/etc/SuSE-release" ]
then
   os_name=$(sed -ne 's/^VERSION *= */suse/p' /etc/SuSE-release 2>/dev/null)
fi
: ${os_name:=NONE}

# -----------------------------------------------------------------------------
# host_info
#
# report host specific information about filesystems, logins,
# special hardware extensions, etc.
#
host_info()
{
   echo "$UQHOST:arch:$os_arch"
   echo "$UQHOST:os:$os_name"
   df_info	tmp	/tmp
   echo "$UQHOST:mips:$mips"
}

# -----------------------------------------------------------------------------
# iidle_info()
# report a machine's idle time
#
# parse the contents from /proc/interrupts, which looks like the following:
#
#            CPU0
#   0:   23024789          XT-PIC  timer
#   1:         13          XT-PIC  keyboard
#   2:          0          XT-PIC  cascade
#   5:          0          XT-PIC  usb-uhci
#   8:          2          XT-PIC  rtc
#   9:          0          XT-PIC  acpi
#  10:          0          XT-PIC  ehci-hcd, usb-uhci
#  11:   16687253          XT-PIC  eth0, usb-uhci, Intel 82801DB-ICH4, nvidia
#  12:         20          XT-PIC  PS/2 Mouse
#  14:      77178          XT-PIC  ide0
#  15:          2          XT-PIC  ide1
# NMI:          0
# LOC:          0
# ERR:          0
# MIS:          0
#
# or,
#
#            CPU0       CPU1
#   0:   12820049   12818168    IO-APIC-edge  timer
#   1:      42889      43309    IO-APIC-edge  keyboard
#   2:          0          0          XT-PIC  cascade
#   8:          2          0    IO-APIC-edge  rtc
#   9:          0          0    IO-APIC-edge  acpi
#  12:     287235     296531    IO-APIC-edge  PS/2 Mouse
#  14:      47423      40923    IO-APIC-edge  ide0
#  15:          2          3    IO-APIC-edge  ide1
#  16:    7733868    7737081   IO-APIC-level  nvidia
#  17:        159        156   IO-APIC-level  Intel ICH 82801AA
#  19:    2155710    2159943   IO-APIC-level  e100, usb-uhci
# NMI:          0          0
# LOC:   25641034   25641033
# ERR:          0
# MIS:          0
#
# Thus, we need the [-1, 1..$ncpu] fields for the following sources:
# keyboard, Mouse, serial
#
# NB: adding 'usb-uhci' gives problems, since this is sometimes
# attached to the ethernet card
#
# set the variable 'iidle' to the idle time (seconds) since the last call
#
last="0 -1";
iidle_info()
{
    set -- $(
    perl -e '
        my @last = @ARGV;
        @ARGV = "/proc/interrupts";
        $_    = <>;

        my $ncpu = s/\s*CPU\d+//g || 0;
        my ( $iidle, $int, $now ) = ( 0, 0, time );

        $int += $_
          for
	  map { /\s+(keyboard|Mouse|serial)$/ ? (split)[ 1 .. $ncpu ] : (); }
          <>;

        if ( $int == $last[-1] ) {    # no interactivity since last round
            $iidle = ( $now - $last[0] );
        }
        else {
            @last = ( $now, $int );
        }

        print "$iidle @last\n";
    ' $last
    );

    echo "$UQHOST:iidle:$1";

    shift; last="$@";	# save for later
}
# -----------------------------------------------------------------------------
#
# The execd running on the qmaster queries the license server
# The contents of 'act_qmaster' should suffice to migrate the load sensor
# for a controlled migration.
#

while :
do
   read input || exit 1		# wait for input
   [ "$input" = quit ] && exit 0

   echo begin			# begin load report
   host_info			# host information
   iidle_info			# machine's idle time
   echo end			# end load report

   # let the license query run between load reports
   SGE_qmaster=`act_qmaster`	# refresh the name of the qmaster
   if [ "$HOST" = "$SGE_qmaster" ]
   then
      $qlicserver 2>> qloadsensor.err
      # force rescheduling of express jobs
      $SGE_site/qxprs >/dev/null 2>&1
   fi
done
exit 0			# we never get here, but just in case

#------------------------------------------------------------------------------
# feed through 'perl -x' to extract the 'host' complex configuration

#!/usr/bin/perl -w
print <DATA>
__DATA__
#
# host complex configuration
#
#name         shortcut  type   relop requestable consumable default  urgency
#---------------------------------------------------------------------------
tmp_total      tmpt     MEMORY  <=   YES         NO         0        0
tmp_used       tmpu     MEMORY  >=   NO          NO         0        0
tmp_free       tmpf     MEMORY  <=   YES         NO         0        0
iidle          iidle    INT     <=   YES         NO         0        0
mips           mips     INT     <=   YES         NO         0        0
os             os       RESTRING ==  YES         NO         NONE     0
# -----------------------------------------------------------------------------
